/* global window, feezal */

import {PolymerElement, html} from '@polymer/polymer/polymer-element.js';

const styleElement = document.createElement('dom-module');

styleElement.innerHTML =
    `<template>
       <style>
        :host {
            display: inline-block;
            box-sizing: border-box;
            overflow: hidden;
        }
        :host([hidden]) {
            display: none;
        }
        :host(.feezal-editable) {
            outline: 1px dashed rgba(250, 120, 0, 0.8);
        }
        :host(.feezal-editable.feezal-selected) {
            outline: 2px dashed rgba(250, 120, 0, 0.8);
        }
        .feezal-blocker {
            top: 0;
            left: 0;
            display: block;
            width: 100%;
            height: 100%;
            position: absolute;
            z-index: 10;
        }
       </style>
     </template>`;

styleElement.register('feezal-style-element');

class FeezalElement extends PolymerElement {
    static get properties() {
        return {
            'selected': {
                type: Boolean,
                value: false
            },
            'dynamicSubscriptions': {
                type: Boolean,
                value: false,
                reflectToAttribute: true
            },
            'visible': {
                type: Boolean,
                value: false,
                observer: '_visibleChanged'
            }
        }
    }
    static get feezal() {
        return {
            attributes: [],
            styles: []
        }
    }

    _payloadCast(type, payload) {
        if (typeof payload === 'string') {
            switch (type) {
                case Boolean:
                    return Number(payload) !== 0 && payload.toLowerCase() !== 'false';
                default:
                    return payload;
            }
        } else {
            return payload;
        }
    }

    subscribe(topic, callback) {
        this._subscriptions.push(feezal.connection.subscribe(topic, callback));
    }

    _subscribe() {
        if (!this.subscribeTopic) {
            return;
        }

        const elemClass = window.customElements.get(this.localName);

        this._subscriptions.push(feezal.connection.subscribe(this.subscribeTopic + '/#', msg => {
            let key;
            if (msg.topic === this.subscribeTopic && elemClass.feezal) {
                key = elemClass.feezal.baseAttribute;
            } else {
                key = msg.topic.split('/').pop();
            }

            const type = (elemClass.properties[key] || {}).type;

            const val = this._payloadCast(key === 'style' ? Object : type, msg.payload);

            if (key === 'addclass') {
                this.classList.add(msg.payload);
            } else if (key === 'removeclass') {
                this.classList.remove(msg.payload);
            } else if (key === 'style') {
                Object.assign(this.style, msg.payload);
            } else if (type === Boolean && !val) {
                this.removeAttribute(key);
            } else {
                this.setAttribute(key, val);
            }

        }));
    }

    _unsubscribe() {
        const sub = this._subscriptions.shift();
        if (sub) {
            feezal.connection.unsubscribe(sub);
            this._unsubscribe();
        }
    }

    constructor() {
        super();
        this._subscriptions = [];
    }

    connectedCallback() {
        super.connectedCallback();
        this.classList.add('feezal-element');
        if (feezal.isEditor) {
            const el = document.createElement('div');
            el.className = 'feezal-blocker';
            this.shadowRoot.prepend(el);
            this.shadowRoot.querySelectorAll('*').forEach(el => {
                if (el.hasAttribute('tabindex')) {
                    el.addEventListener('focus', event => {
                        event.preventDefault();
                        if (event.relatedTarget) {
                            event.relatedTarget.focus();
                        } else {
                            event.currentTarget.blur();
                        }
                    });
                    el.setAttribute('tabindex', '-1');
                }
            });
        } else {
            if (this.visible || !this.dynamicSubscriptions) {
                this._subscribe();
            }
        }
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        this._unsubscribe();
    }

    _visibleChanged(visible) {
        if (feezal.isEditor || !this.dynamicSubscriptions) {
            return;
        }
        if (visible) {
            this._subscribe();
        } else {
            this._unsubscribe();
        }
    }

    // Utils
    throttle(func, limit) {
        let lastFunc;
        let lastRan;
        return function () {
            const context = this;
            const args = arguments;

            if (!lastRan) {
                func.apply(context, args);
                lastRan = Date.now();
            } else {
                clearTimeout(lastFunc);
                this._inThrottle = true;
                lastFunc = setTimeout(function () {
                    if ((Date.now() - lastRan) >= limit) {
                        func.apply(context, args);
                        lastRan = Date.now();
                        this._inThrottle = false;
                    }
                }, limit - (Date.now() - lastRan));
            }
        }
    }

}

window.customElements.define('feezal-element', FeezalElement);

export {FeezalElement, html};
