/* global window, feezal */

import { LitElement, css, html } from 'lit-element';

class FeezalLitElement extends LitElement {
    static get styles() {
        return css`
            :host {
                position: absolute;
                display: inline-block;
                box-sizing: border-box;
                overflow: hidden;
            }
            :host([hidden]) {
                display: none;
            }
            :host(.feezal-editable) {
                outline: 1px dashed rgba(250, 120, 0, 0.8);
            }
            :host(.feezal-editable.feezal-selected) {
                outline: 2px dashed rgba(250, 120, 0, 0.8);
            }
            .feezal-blocker {
                top: 0;
                left: 0;
                display: block;
                width: 100%;
                height: 100%;
                position: absolute;
                z-index: 10;
            }
        `;
    }

    firstUpdated() {
        if (feezal.editor) {
            console.log('feezal-lit-element editor')
            const el = document.createElement('div');
            el.className = 'feezal-blocker';
            this.shadowRoot.prepend(el);
            console.log('shadowRoot', this.shadowRoot.innerHTML)
            this.shadowRoot.querySelectorAll('*').forEach(el => {
                if (el.hasAttribute('tabindex')) {
                    el.addEventListener('focus', event => {
                        event.preventDefault();
                        if (event.relatedTarget) {
                            event.relatedTarget.focus();
                        } else {
                            event.currentTarget.blur();
                        }
                    });
                    el.setAttribute('tabindex', '-1');
                }
            });
        }
        const elemClass = window.customElements.get(this.localName);

        Object.keys(elemClass.properties).forEach(key => {
            const prop = elemClass.properties[key];
            if (!['msg', 'topic'].includes(key) && prop.reflect) {
                if (this.topic) {
                    feezal.connection.subscribe(this.topic + '/' + key, msg => {
                        console.log('<', key, msg);
                        if (prop.type === Boolean && !msg.payload) {
                            this.removeAttribute(key);
                        } else {
                            this.setAttribute(key, msg.payload);
                        }
                    });
                }

            }
        });
        if (this.topic) {
            feezal.connection.subscribe(this.topic + '/style', msg => {
                console.log('style', msg.payload);
                if (typeof msg.payload === 'object') {
                    Object.assign(this.style, msg.payload);
                }
            });
        }
    }
}

customElements.define('feezal-lit-element', FeezalLitElement);

export {FeezalLitElement, html, css}