import {FeezalElement, html} from "@feezal/feezal-element";

import '@polymer/paper-dialog/paper-dialog';
import '@polymer/paper-dialog-scrollable/paper-dialog-scrollable';


class FeezalElementPaperDialog extends FeezalElement {
    static get template() {
        return html`
            <style include="feezal-style-element"></style>
            <style>
                #container {
                    width: 100%;
                    height: 100%;
                }
                #container.editor {
                    background-image:
                        -moz-linear-gradient(45deg, #eee 25%, transparent 25%,transparent 75%, #eee 75%, #eee 100%),
                        -moz-linear-gradient(45deg, #eee 25%, transparent 25%,transparent 75%, #eee 75%, #eee 100%);
                    
                    background-image:
                        -webkit-linear-gradient(45deg, #eee 25%, transparent 25%,transparent 75%, #eee 75%, #eee 100%),
                        -webkit-linear-gradient(45deg, #eee 25%, transparent 25%,transparent 75%, #eee 75%, #eee 100%);
                    
                    -moz-background-size:20px 20px;
                    background-size:20px 20px;
                    -webkit-background-size:21px 21px;
                    background-position:0 0, 10px 10px;
                    display: flex;
                }
                #view {
                    display: flex;
                }
                paper-dialog-scrollable {
                    padding-top: 1px;
                }
            </style>
            <div id="container">
                <paper-dialog id="dialog" opened="{{opened}}" 
                    modal="[[_hasModal(opened, currentView)]]"
                    with-backdrop="[[_hasBackdrop(opened, currentView)]]"
                    no-cancel-on-esc-key="[[noCancelOnEscKey]]"
                    no-cancel-on-outside-click="[[noCancelOnOutsideClick]]"   
                >
                    <template is="dom-if" if="[[header]]"></template>
                        <h2>[[header]]</h2>
                    </template>
                    <paper-dialog-scrollable>
                        <div id="view"></div>
                    </paper-dialog-scrollable>
                    <template is="dom-if" if="[[_hasButtons(buttonCancel, buttonAccept)]]"></template>
                        <div class="buttons">
                            <template is="dom-if" if="[[buttonCancel]]"></template>
                                <paper-button dialog-dismiss>[[buttonCancel]]</paper-button>
                            </template>
                            <template is="dom-if" if="[[buttonAccept]]"></template>
                                 <paper-button dialog-confirm autofocus on-click="_accept">[[buttonAccept]]</paper-button>
                            </template>
                        </div>
                    </template>
                </paper-dialog>
            </div>
        `;
    }
    static get properties() {
        return {
            subscribeTopic: {
                type: String,
                value: '',
                reflectToAttribute: true,
            },
            publishTopic: {
                type: String,
                value: '',
                reflectToAttribute: true,
            },
            publishTopicAccept: {
                type: String,
                value: '',
                reflectToAttribute: true,
            },
            publishPayloadAccept: {
                type: String,
                value: '',
                reflectToAttribute: true,
            },
            header: {
                type: String,
                value: '',
                reflectToAttribute: true,
                observer: '_viewChanged'
            },
            view: {
                type: String,
                value: '',
                reflectToAttribute: true,
                observer: '_viewChanged'
            },
            buttonCancel: {
                type: String,
                value: '',
                reflectToAttribute: true
            },
            buttonAccept: {
                type: String,
                value: '',
                reflectToAttribute: true
            },
            modal: {
                type: Boolean,
                value: false,
                reflectToAttribute: true
            },
            withBackdrop: {
                type: Boolean,
                value: false,
                reflectToAttribute: true
            },
            noCancelOnEscKey: {
                type: Boolean,
                value: false,
                reflectToAttribute: true
            },
            noCancelOnOutsideClick: {
                type: Boolean,
                value: false,
                reflectToAttribute: true
            },

            global: {
                type: Boolean,
                value: false,
                reflectToAttribute: true
            },
            opened: {
                type: Boolean,
                value: false,
                reflectToAttribute: true,
                observer: '_openedChanged'
            }

        }
    }

    static get feezal() {
        return {
            palette: {
                category: 'Paper',
                name: 'Dialog',
                color: '#eee'
            },
            attributes: [
                'publishTopicAccept',
                'publishPayloadAccept',
                'header',
                {
                    name: 'view',
                    dropdown: 'views',
                    tooltip: 'the view that is shown inside the dialog'
                },
                'buttonCancel',
                'buttonAccept',
                {
                    name: 'global',
                    tooltip: 'enable to show dialog on all views'
                },
                {
                    name: 'modal',
                    tooltip: 'if enabled also implies no-cancel-on-esc-key and no-cancel-on-outside-click'
                },
                'withBackdrop',
                'noCancelOnEscKey',
                'noCancelOnOutsideClick',
            ],
            baseAttribute: 'opened',
            styles: [
                'top',
                'left'
            ],
            restrict: {
                minWidth: 36,
                minHeight: 12
            },
            defaultStyle: {
                width: '160px',
                height: '30px'
            }
        };
    }

    connectedCallback() {
        super.connectedCallback();
        if (feezal.isEditor) {
            this.$.container.classList.add('editor');
        } else {
            feezal.site.addEventListener('view-changed', e => {
                this.currentView = feezal.view;
                this._openedChanged();
            });
        }
    }
    _viewChanged() {
        if (feezal.isEditor) {
            this.$.container.innerHTML = '<span style="margin: auto; font-weight: bold;">Dialog ' + this.header + ' (' + this.view + ')</span>';
        } else if (this.view) {
            this.$.view.innerHTML = feezal.getView(this.view).outerHTML;
        }
    }
    _openedChanged() {
        if (!feezal.isEditor && this.opened && this.global && feezal.view) {
            feezal.view.appendChild(this);
        }
        if (this.publishTopic) {
            feezal.connection.publish(this.publishTopic, this.opened);
        }
    }
    _hasModal() {
        return this.modal && (this.global || this.parentElement === feezal.view);
    }
    _hasBackdrop() {
        return this.withBackdrop && (this.global || this.parentElement === feezal.view);
    }
    _hasButtons() {
        return this.buttonCancel || this.buttonAccept;
    }
    _accept() {
        if (this.publishTopicAccept) {
            feezal.connection.publish(this.publishTopicAccept, this.publishPayloadAccept);
        }
    }

}

window.customElements.define('feezal-element-paper-dialog', FeezalElementPaperDialog);

export {FeezalElementPaperDialog};